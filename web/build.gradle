apply plugin: 'kotlin2js'
apply plugin: 'com.github.node-gradle.node'


compileKotlin2Js {
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.main = "call"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.main = "call"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    implementation project(':core')
}


task assembleHtml(type: Copy) {
    from("src/main/html") {
        include '**/*.html'
    }
    into("${buildDir}/site")
}

// TODO: Create a pipeline to compile scss
task assembleCss(type: Copy) {
    from("src/main/css") {
        include '**/*.css'
    }
    into("${buildDir}/site/css")
}

// TODO: Create a pipeline to generate HTML from template
task assembleJs(type: Copy) {
    from("src/main/js") {
        include '**/*.js'
    }
    into("${buildDir}/site/js")
}

task assembleKotlinJs(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || 
                    !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${buildDir}/site/ks"

    dependsOn classes
}

task assembleKotlinJsOutput(type: Copy) {
    from("build/classes/kotlin/main") {
        include '**'
    }
    into("${buildDir}/site/ks")
    dependsOn compileKotlin2Js
}

task assembleCoreKotlinJsOutput(type: Copy) {
    from("${project(':core').projectDir.path}/build/classes/kotlin/js/main/") {
         include '**'
    }
    into("${buildDir}/site/ks")
    dependsOn compileKotlin2Js
}


task httpdNpmInstall(type: NpmTask) {
    description = "Installs dependencies from package.json"
    workingDir = file("$project.projectDir.path/httpd")
    args = ['install']
}

// This is to run embedded HTTP server with Ktor:
task runHttpd(type: NodeTask) {
    script = file('httpd/app.js') 
    // 'server_root', 'server_port'
    args = ["$project.buildDir.path/site",'8080']
    dependsOn httpdNpmInstall
    dependsOn assemble
}

assemble.dependsOn assembleKotlinJs
assemble.dependsOn assembleKotlinJsOutput
assemble.dependsOn assembleCoreKotlinJsOutput
assemble.dependsOn assembleJs
assemble.dependsOn assembleCss
assemble.dependsOn assembleHtml
